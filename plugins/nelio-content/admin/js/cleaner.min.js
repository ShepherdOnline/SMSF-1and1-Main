/**
 * This file defines the dialogs and AJAX requests for (eventually) cleaning
 * Nelio's data from WordPress.
 *
 * @author David Aguilera <david.aguilera@neliosoftware.com>
 * @since  1.0.0
 */
(function( $ ) {

	'use strict';

	$( '#nc-deactivate' ).click( function( ev ) {

		var deactivationUrl = $( this ).attr( 'href' );
		ev.preventDefault();

		var $proceedButton;
		var $dialog = jQuery( '<div class="nc-cleaner-dialog">' + $( '#_nc-cleaner-dialog' ).html() + '</div>' );
		$dialog.dialog({

			title: NelioContent.i18n.titles.deactivatePlugin,
			autoOpen: true,
			closeOnEscape: true,
			modal: true,
			width: 420,

			buttons: [
				{
					text: NelioContent.i18n.actions.close,
					'class': 'button',
					click: function() {
						$( this ).dialog( 'close' );
					}
				},
				{
					text: NelioContent.i18n.actions.deactivate,
					'class': 'button nc-proceed',
					click: function() {

						$( this ).dialog( 'option', 'closeOnEscape', false );
						$( this ).closest( '.ui-dialog' ).find( 'input, button, .button' ).prop( 'disabled', true );
						$proceedButton.removeClass( 'nc-super-delete-button' );
						$proceedButton.removeClass( 'button-primary' );

						var value = $( this ).find( 'input[name="nc-deactivate-action"]:checked' ).val();

						switch ( value ) {

							case 'clean-and-deactivate':
								$proceedButton.html( NelioContent.i18n.feedback.cleaning );
								$.ajax({
									url: ajaxurl,
									data: { action: 'nelio_content_clean_and_deactivate' },
									success: function() {
										window.location.href = deactivationUrl;
									},//end success()
									error: function() {
										window.location.reload();
									}//end error()
								});
								break;

							case 'cancel-subscription-and-deactivate':
								$proceedButton.html( NelioContent.i18n.feedback.cancelingSubscription );
								$.ajax({
									url: ajaxurl,
									data: { action: 'nelio_content_cancel_account_clean_and_deactivate' },
									success: function() {
										window.location.href = deactivationUrl;
									},//end success()
									error: function() {
										window.location.reload();
									}//end error()
								});
								break;

							default:
								$proceedButton.html( NelioContent.i18n.feedback.deactivating );
								window.location.href = deactivationUrl;

						}//end switch

					}//end click()
				}
			],

			close: function() {

				$( this ).dialog( 'destroy' );

			}//end close()

		});

		$proceedButton = $dialog.closest( '.ui-dialog' ).find( '.nc-proceed' );
		$proceedButton.prop( 'disabled', true );

		$dialog.find( 'input[name="nc-deactivate-action"]' ).on( 'change', function() {

			var value = $dialog.find( 'input[name="nc-deactivate-action"]:checked' ).val();
			$proceedButton.prop( 'disabled', false );
			$proceedButton.removeClass( 'nc-super-delete-button' );
			$proceedButton.removeClass( 'button-primary' );

			switch ( value ) {

				case 'deactivate':
					$proceedButton.html( NelioContent.i18n.actions.deactivate );
					$proceedButton.addClass( 'button-primary' );
					break;

				case 'clean-and-deactivate':
					$proceedButton.html( NelioContent.i18n.actions.cleanAndDeactivate );
					$proceedButton.addClass( 'button-primary' );
					break;

				case 'cancel-subscription-and-deactivate':
					$proceedButton.html( NelioContent.i18n.actions.cancelSubscriptionAndDeactivate );
					$proceedButton.addClass( 'nc-super-delete-button' );
					break;

			}//end switch

		});

	});

})( jQuery );

